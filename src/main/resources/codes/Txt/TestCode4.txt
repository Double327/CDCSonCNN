package LeetCode.M10Y20.D10;

public class Pro142Mid {

    public static class ListNode {
        int val;
        ListNode next;
        ListNode(int x) {
            val = x;
            next = null;
        }
    }
    public static void main(String[] args){
        ListNode headNode = new ListNode(1);
        ListNode listNode2 = new ListNode(2);
        ListNode listNode3 = new ListNode(9);
        ListNode listNode4 = new ListNode(10);
        ListNode listNode5 = new ListNode(11);
        ListNode listNode6 = new ListNode(15);
        ListNode listNode7 = new ListNode(20);
        headNode.next = listNode2;
        listNode2.next = listNode3;
        listNode3.next = listNode4;
        listNode4.next = listNode5;
        listNode5.next = listNode6;
        listNode6.next = listNode7;
        listNode7.next = listNode5;
        System.out.println(detectCycle(headNode).val);
    }
    public static ListNode detectCycle(ListNode head) {
        // 快慢指针
        // 边界
        if (head==null||head.next==null){
            return null;
        }
        ListNode slow = head, fast = head;
        while(fast!=null&&fast.next!=null){
            slow = slow.next;
            fast = fast.next.next;
            if (fast == slow){
                ListNode ptr = head;
                while(ptr!=slow){
                    slow = slow.next;
                    ptr = ptr.next;
                }
                return ptr;
            }
        }
        return null;
    }

}
